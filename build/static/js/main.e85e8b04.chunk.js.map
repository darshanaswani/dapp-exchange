{"version":3,"sources":["helpers.js","store/selectors.js","store/actions.js","components/Navbar.js","store/interactions.js","components/Spinner.js","components/OrderBook.js","components/Trades.js","components/MyTransactions.js","components/PriceChart.config.js","components/PriceChart.js","components/Balance.js","components/NewOrder.js","components/Content.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["ETHER_ADDRESS","GREEN","RED","DECIMALS","ether","wei","tokens","formatBalance","balance","Math","round","account","state","get","accountSelector","createSelector","a","web3Selector","w","tokenLoaded","tokenSelector","tl","t","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","cancelledOrdersLoaded","cancelledOrders","loaded","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","orders","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","tokenPrice","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","allOrders","filled","cancelled","reject","orderFilled","some","orderCancelled","orderBookLoaded","allOrdersLoaded","orderBookLoadedSelector","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","priceChartSelector","secondLastOrder","lastOrder","slice","length","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","high","maxBy","low","minBy","close","x","Date","y","orderCancellingSelector","status","orderFillingSelector","balancesLoadingSelector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","amount","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","sellOrderSelector","web3AccountLoaded","type","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","Navbar","useSelector","dispatch","useDispatch","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","target","rel","onClick","window","ethereum","request","method","then","accounts","console","log","catch","error","code","connectWallet","i","loadWeb3","web3","Web3","connection","alert","location","assign","loadAccount","eth","getAccounts","loadToken","networkId","token","Contract","Token","abi","networks","address","contract","loadExchange","exchange","Exchange","loadAllOrders","getPastEvents","fromBlock","toBlock","cancelStream","event","returnValues","tradeStream","orderStream","subscribeToEvents","events","Cancel","Trade","Deposit","Withdraw","Order","loadBalances","getBalance","etherBalance","methods","balanceOf","call","tokenBalance","exchangeEtherBalance","options","exchangeTokenBalance","renderOrder","props","OverlayTrigger","key","placement","overlay","Tooltip","fillOrder","send","from","on","hash","OrderBook","this","showOrderBook","orderBook","Spinner","Component","connect","orderFilling","Trades","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","Tabs","defaultActiveKey","Tab","eventKey","title","showMyFilledOrders","myFilledOrders","myOpenOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","showPriceChart","priceChart","height","PriceChart","priceChartLoaded","showForm","etherDepositAmount","tokenDepositAmount","etherWithdrawAmount","tokenWithdrawAmount","onSubmit","preventDefault","depositEther","value","utils","toWei","placeholder","onChange","required","approve","depositToken","withdrawEther","withdrawToken","Balance","loadBlockchainData","balancesLoading","buyOrder","sellOrder","showBuyTotal","showSellTotal","tokenGet","price","toString","makeOrder","makeBuyOrder","makeSellOrder","NewOrder","making","Content","App","net","getId","contractsLoaded","rootReducer","combineReducers","action","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","Boolean","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":";w9/fAAaA,EAAgB,6CAChBC,EAAQ,UACRC,EAAM,SAENC,EAAQ,SAAI,GAAI,IAGhBC,EAAQ,SAACC,GACpB,GAAGA,EACD,OAAOA,EAAMF,GAKJG,EAASF,ECRTG,EAAgB,SAACC,GAM5B,OAHAA,EAAUJ,EAAMI,GAChBA,EAAUC,KAAKC,MAHG,IAGGF,GAHH,KAQdG,EAAU,SAAAC,GAAK,OAAIC,cAAID,EAAO,iBACvBE,EAAkBC,YAAeJ,GAAS,SAAAK,GAAC,OAAIA,KAG/CC,EAAeF,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,sBACgB,SAAAM,GAAC,OAAIA,KAEhDC,EAAc,SAAAP,GAAK,OAAIC,cAAID,EAAO,gBAAgB,IAI3CQ,GAHsBL,YAAeI,GAAa,SAAAE,GAAE,OAAIA,KAGxCN,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,qBACiB,SAAAU,GAAC,OAAIA,MAElDC,EAAiB,SAAAX,GAAK,OAAIC,cAAID,EAAO,mBAAmB,IAIjDY,GAHyBT,YAAeQ,GAAgB,SAAAE,GAAE,OAAIA,KAG3CV,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,wBACoB,SAAAc,GAAC,OAAIA,MAEjDC,EAA0BZ,YACrCI,EACAI,GACA,SAACF,EAAII,GAAE,OAAMJ,GAAMI,KAQfG,EAAwB,SAAAhB,GAAK,OAAIC,cAAID,EAAO,mCAAmC,IAG/EiB,GAFuCd,YAAea,GAAuB,SAAAE,GAAM,OAAIA,KAErE,SAAAlB,GAAK,OAAIC,cAAID,EAAO,gCAAiC,MAIvEmB,GAHiChB,YAAec,GAAiB,SAAAG,GAAC,OAAIA,KAGjD,SAAApB,GAAK,OAAIC,cAAID,EAAO,gCAAgC,KAClEqB,EAA6BlB,YAAegB,GAAoB,SAAAD,GAAM,OAAIA,KAEjFI,EAAe,SAAAtB,GAAK,OAAIC,cAAID,EAAO,6BAA8B,KAC1DuB,EAAuBpB,YAClCmB,GACA,SAACE,GAOC,OALAA,EAASA,EAAOC,MAAK,SAACrB,EAAEsB,GAAC,OAAKtB,EAAEuB,UAAYD,EAAEC,aAI9CH,GAFAA,EAASI,EAAqBJ,IAEdC,MAAK,SAACrB,EAAEsB,GAAC,OAAKA,EAAEC,UAAYvB,EAAEuB,gBAK5CC,EAAuB,SAACJ,GAE5B,IAAIK,EAAgBL,EAAO,GAC3B,OACEA,EAAOM,KAAI,SAACC,GAIV,OAHAA,EAAQC,EAAcD,GACtBA,EAAQE,EAAoBF,EAAOF,GACnCA,EAAgBE,EACTA,MAKPC,EAAgB,SAACD,GACrB,IAAIG,EACAC,EAEDJ,EAAMK,YAAchD,GACrB8C,EAAcH,EAAMM,WACpBF,EAAcJ,EAAMO,YAEpBJ,EAAcH,EAAMO,UACpBH,EAAcJ,EAAMM,YAItB,IACIE,EAAcL,EAAcC,EAGhC,OAFAI,EAAa1C,KAAKC,MAFA,IAEMyC,GAFN,IAIlB,2BACKR,GAAK,IACRG,YAAa1C,EAAM0C,GACnBC,YAAazC,EAAOyC,GACpBI,aACAC,mBAAoBC,IAAOC,KAAKX,EAAMJ,WAAWgB,OAAO,oBAItDV,EAAsB,SAACF,EAAOF,GAClC,kCACKE,GAAK,IACRa,gBAAiBA,EAAgBb,EAAMQ,WAAYR,EAAMc,GAAIhB,MAI3De,EAAkB,SAACL,EAAYO,EAASjB,GAE5C,OAAGA,EAAcgB,KAAOC,GAMrBjB,EAAcU,YAAcA,EALtBlD,EAQAC,GAILyD,EAAa,SAAA/C,GACjB,IAAMgD,EAzFU,SAAAhD,GAAK,OAAIC,cAAID,EAAO,0BAA2B,IAyFnDiD,CAAUjD,GAChBkD,EAAS5B,EAAatB,GACtBmD,EAAYlC,EAAgBjB,GAE5B+C,EAAaK,iBAAOJ,GAAK,SAACjB,GAC9B,IAAMsB,EAAcH,EAAOI,MAAK,SAAClC,GAAC,OAAKA,EAAEyB,KAAOd,EAAMc,MAChDU,EAAiBJ,EAAUG,MAAK,SAAClC,GAAC,OAAKA,EAAEyB,KAAOd,EAAMc,MAC5D,OAAOQ,GAAeE,KAGxB,OAAOR,GAIHS,EAAkB,SAAAxD,GAAK,OAAIgB,EAAsBhB,IAAUmB,EAAmBnB,IAxG5D,SAAAA,GAAK,OAAIC,cAAID,EAAO,6BAA6B,GAwGqByD,CAAgBzD,IACjG0D,EAA0BvD,YAAeqD,GAAiB,SAAAtC,GAAM,OAAIA,KAGpEyC,EAAoBxD,YAC/B4C,GACA,SAACvB,GAECA,EAASoC,EAAwBpC,GAEjCA,EAASqC,kBAAQrC,EAAQ,aAEzB,IAAMsC,EAAY7D,cAAIuB,EAAQ,MAAO,IAErCA,EAAM,2BACDA,GAAM,IACTsC,UAAWA,EAAUrC,MAAK,SAACrB,EAAEsB,GAAC,OAAKA,EAAEa,WAAanC,EAAEmC,gBAGtD,IAAMwB,EAAa9D,cAAIuB,EAAQ,OAAQ,IAMvC,OAJAA,EAAM,2BACDA,GAAM,IACTuC,WAAYA,EAAWtC,MAAK,SAACrB,EAAEsB,GAAC,OAAKA,EAAEa,WAAanC,EAAEmC,mBAMtDqB,EAA0B,SAACpC,GAC/B,OACEA,EAAOM,KAAI,SAACC,GAGV,OAFAA,EAAQC,EAAcD,GACtBA,EAAQiC,EAAuBjC,OAM/BiC,EAAyB,SAACjC,GAC9B,IAAMkC,EAAYlC,EAAMK,YAAchD,EAAgB,MAAQ,OAC9D,kCACK2C,GAAK,IACRkC,YACAC,eAA+B,QAAdD,EAAsB5E,EAAQC,EAC/C6E,gBAA+B,QAAdF,EAAsB,OAAS,SAIvCG,EAA+BjE,YAAegB,GAAoB,SAAAD,GAAM,OAAIA,KAE5EmD,EAAyBlE,YACpCJ,EACAuB,GACA,SAACvB,EAASyB,GAOR,OAHAA,GAFAA,EAASA,EAAO8C,QAAO,SAAClD,GAAC,OAAKA,EAAEmD,OAASxE,GAAWqB,EAAEoD,WAAazE,MAEnD0B,MAAK,SAACrB,EAAEsB,GAAC,OAAKtB,EAAEuB,UAAYD,EAAEC,aAE9CH,EAASiD,EAAuBjD,EAAQzB,MAKtC0E,EAAyB,SAACjD,EAAQzB,GACtC,OACEyB,EAAOM,KAAI,SAACC,GAGV,OAFAA,EAAQC,EAAcD,GACtBA,EAAQ2C,EAAsB3C,EAAOhC,OAMrC2E,EAAwB,SAAC3C,EAAOhC,GACpC,IAEIkE,EAOJ,OALEA,EAJclC,EAAMwC,OAASxE,EAIjBgC,EAAMK,YAAchD,EAAgB,MAAQ,OAE5C2C,EAAMK,YAAchD,EAAgB,OAAS,MAG3D,2BACK2C,GAAK,IACRkC,YACAC,eAA+B,QAAdD,EAAsB5E,EAAQC,EAC/CqF,UAA0B,QAAdV,EAAsB,IAAM,OAI/BW,GAA6BzE,YAAeqD,GAAiB,SAAAtC,GAAM,OAAIA,KAEvE2D,GAAuB1E,YAClCJ,EACAgD,GACA,SAAChD,EAASyB,GAOR,OALAA,EAASA,EAAO8C,QAAO,SAAClD,GAAC,OAAKA,EAAEmD,OAASxE,KAIzCyB,GAFAA,EAASsD,GAAqBtD,IAEdC,MAAK,SAACrB,EAAEsB,GAAC,OAAKA,EAAEC,UAAYvB,EAAEuB,gBAK5CmD,GAAuB,SAACtD,EAAQzB,GACpC,OACEyB,EAAOM,KAAI,SAACC,GAGV,OAFAA,EAAQC,EAAcD,GACtBA,EAAQgD,GAAoBhD,EAAOhC,OAMnCgF,GAAsB,SAAChD,EAAOhC,GAClC,IAAIkE,EAAYlC,EAAMK,YAAchD,EAAgB,MAAQ,OAE5D,kCACK2C,GAAK,IACRkC,YACAC,eAA+B,QAAdD,EAAsB5E,EAAQC,KAItC0F,GAA2B7E,YAAegB,GAAoB,SAAAD,GAAM,OAAIA,KAExE+D,GAAqB9E,YAChCmB,GACA,SAACE,GAMC,IAAI0D,EAAiBC,EAAS,GAF9B3D,GAFAA,EAASA,EAAOC,MAAK,SAACrB,EAAEsB,GAAC,OAAKtB,EAAEuB,UAAYD,EAAEC,cAE9BG,KAAI,SAACV,GAAC,OAAKY,EAAcZ,OAGHgE,MAAM5D,EAAO6D,OAAS,EAAG7D,EAAO6D,QAAO,mBAA5EH,EAAe,KAAEC,EAAS,KAE3B,IAAMG,EAAYrF,cAAIkF,EAAW,aAAc,GAI/C,MAAO,CACLG,YACAC,gBAAkBD,GAJIrF,cAAIiF,EAAiB,aAAc,GAIR,IAAM,IACvDM,OAAQ,CAAC,CACPC,KAAMC,GAAelE,SAMvBkE,GAAiB,SAAClE,GAqBtB,OAnBAA,EAASqC,kBAAQrC,GAAQ,SAACJ,GAAC,OAAKqB,IAAOC,KAAKtB,EAAEO,WAAWgE,QAAQ,QAAQhD,YAE3DiD,OAAOC,KAAKrE,GAEFM,KAAI,SAACgE,GAE3B,IAAMC,EAAQvE,EAAOsE,GAEfE,EAAOD,EAAM,GACbE,EAAOC,gBAAMH,EAAO,cACpBI,EAAMC,gBAAML,EAAO,cACnBM,EAAQN,EAAMA,EAAMV,OAAS,GAEnC,MAAO,CACLiB,EAAG,IAAIC,KAAKT,GACZU,EAAG,CAACR,EAAKzD,WAAY0D,EAAK1D,WAAY4D,EAAI5D,WAAY8D,EAAM9D,iBAQrDkE,GAA0BtG,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,4BAA4B,MACD,SAAA0G,GAAM,OAAIA,KAGpEC,GAAuBxG,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,yBAAyB,MACD,SAAA0G,GAAM,OAAIA,KAI9DE,GAA0BzG,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,4BAA4B,MACD,SAAA0G,GAAM,OAAIA,KAGpEG,GAAuB1G,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,eAAgB,MAGvD,SAACJ,GACC,OAAOD,EAAcC,MAKZkH,GAAuB3G,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,gBAAiB,MAGxD,SAACJ,GACC,OAAOD,EAAcC,MAKZmH,GAA+B5G,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,wBAAyB,MAGxE,SAACJ,GACC,OAAOD,EAAcC,MAKZoH,GAA+B7G,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,wBAAyB,MAGxE,SAACJ,GACC,OAAOD,EAAcC,MAKZqH,GAA6B9G,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,8BAA+B,SACD,SAAAkH,GAAM,OAAIA,KAG1EC,GAA8BhH,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,+BAAgC,SACD,SAAAkH,GAAM,OAAIA,KAG5EE,GAA6BjH,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,8BAA+B,SACD,SAAAkH,GAAM,OAAIA,KAG1EG,GAA8BlH,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,+BAAgC,SACD,SAAAkH,GAAM,OAAIA,KAG5EI,GAAmBnH,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,oBAAqB,OACD,SAAA+B,GAAK,OAAIA,KAGrDwF,GAAoBpH,aADf,SAAAH,GAAK,OAAIC,cAAID,EAAO,qBAAsB,OACD,SAAA+B,GAAK,OAAIA,KCtX7D,SAASyF,GAAkBzH,GAChC,MAAO,CACL0H,KAAM,sBACN1H,WAoBG,SAASiB,GAAsBC,GACpC,MAAO,CACLwG,KAAM,0BACNxG,mBAIG,SAASE,GAAmBG,GACjC,MAAO,CACLmG,KAAM,uBACNnG,gBAIG,SAASmC,GAAgBR,GAC9B,MAAO,CACLwE,KAAM,oBACNxE,aAwCG,SAASyE,GAAmB9H,GACjC,MAAO,CACL6H,KAAM,uBACN7H,WAIG,SAAS+H,GAA2B/H,GACzC,MAAO,CACL6H,KAAM,gCACN7H,WAIG,SAASgI,GAA2BhI,GACzC,MAAO,CACL6H,KAAM,gCACN7H,WCpGJ,IAuEeiI,GAhDA,WACb,IAAM9H,EAAU+H,YAAY5H,GACtB6H,EAAWC,cAEjB,OACE,yBAAKC,UAAU,kDACb,uBAAGA,UAAU,eAAeC,KAAK,MAAK,uBAGtC,4BACED,UAAU,iBACVR,KAAK,SACLU,cAAY,WACZC,cAAY,qBACZC,gBAAc,oBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMN,UAAU,yBAElB,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,YACXlI,EACC,uBACEkI,UAAU,iBACVC,KAAI,uCAAkCnI,GACtCyI,OAAO,SACPC,IAAI,uBAEH1I,GAGH,4BACE0H,KAAK,SACLQ,UAAU,kBACVS,QAAS,YA1DD,SAACX,GACU,qBAApBY,OAAOC,SAChBD,OAAOC,SACJC,QAAQ,CAAEC,OAAQ,wBAClBC,MAAK,SAACC,GACL,IAAMjJ,EAAUiJ,EAAS,GAEzBC,QAAQC,IAAI,qBAAD,OAAsBnJ,IACjCgI,EAASP,GAAkBzH,OAE5BoJ,OAAM,SAACC,GAENH,QAAQC,IAAIE,EAAOA,EAAMC,SAO7BV,OAAO3C,KAAK,gCAAiC,UAwCjCsD,CAAcvB,KAEjB,sB,uDCjEb,mmGAAAwB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA0BO,IAAMC,GAAQ,wCAAG,WAAOzB,GAAQ,2EACN,qBAApBY,OAAOC,SAAwB,gBAEb,OADrBa,EAAO,IAAIC,KAAKf,OAAOC,UAC7Bb,EF5BK,CACLN,KAAM,cACNkC,WE0BoBF,IAAO,kBACpBA,GAAI,OAEXd,OAAOiB,MAAM,2BACbjB,OAAOkB,SAASC,OAAO,wBAAwB,2CAElD,gBAToB,sCAWRC,GAAW,wCAAG,WAAON,EAAM1B,GAAQ,0FACvB0B,EAAKO,IAAIC,cAAc,KAAD,EAA/B,OAARjB,EAAQ,gBACQA,EAAS,GAAG,KAAD,EAApB,GACU,qBADjBjJ,EAAO,QACqB,iBACK,OAArCgI,EAASP,GAAkBzH,IAAU,kBAC9BA,GAAO,QAE6B,OAA3C4I,OAAOiB,MAAM,8BAA8B,kBACpC,MAAI,4CAEd,gBAVuB,wCAYXM,GAAS,wCAAG,WAAOT,EAAMU,EAAWpC,GAAQ,wEAMxB,OANwB,SAE/CqC,EAAQ,IAAIX,EAAKO,IAAIK,SACzBC,GAAMC,IACND,GAAME,SAASL,GAAWM,SAE5B1C,EFvCK,CACLN,KAAM,eACNiD,SEqCqBN,IAAQ,kBACtBA,GAAK,OAIV,OAJU,yBAEZnB,QAAQC,IACN,8FACA,kBACK,MAAI,yDAEd,gBAdqB,0CAgBTyB,GAAY,wCAAG,WAAOlB,EAAMU,EAAWpC,GAAQ,wEAMrB,OANqB,SAElD6C,EAAW,IAAInB,EAAKO,IAAIK,SAC5BQ,GAASN,IACTM,GAASL,SAASL,GAAWM,SAE/B1C,EF/CK,CACLN,KAAM,kBACNiD,SE6CwBE,IAAW,kBAC5BA,GAAQ,OAIb,OAJa,yBAEf3B,QAAQC,IACN,8FACA,kBACK,MAAI,yDAEd,gBAdwB,0CAgBZ4B,GAAa,wCAAG,WAAOF,EAAU7C,GAAQ,kGAEzB6C,EAASG,cAAc,SAAU,CAC1DC,UAAW,EACXC,QAAS,WACR,KAAD,EAMF,OATMC,EAAY,OAKZjK,EAAkBiK,EAAapJ,KAAI,SAACqJ,GAAK,OAAKA,EAAMC,gBAE1DrD,EAAS/G,GAAsBC,IAE/B,SAC0B2J,EAASG,cAAc,QAAS,CACxDC,UAAW,EACXC,QAAS,WACR,KAAD,EAMF,OATMI,EAAW,OAKX/J,EAAe+J,EAAYvJ,KAAI,SAACqJ,GAAK,OAAKA,EAAMC,gBAEtDrD,EAAS5G,GAAmBG,IAE5B,UAC0BsJ,EAASG,cAAc,QAAS,CACxDC,UAAW,EACXC,QAAS,WACR,KAAD,GAHIK,EAAW,OAKXrI,EAAYqI,EAAYxJ,KAAI,SAACqJ,GAAK,OAAKA,EAAMC,gBAEnDrD,EAAStE,GAAgBR,IAAY,4CACtC,gBA9ByB,wCAgCbsI,GAAiB,wCAAG,WAAOX,EAAU7C,GAAQ,kEACxD6C,EAASY,OAAOC,OAAO,IAAI,SAACrC,EAAO+B,GACjCpD,EFxDK,CACLN,KAAM,kBACN1F,MEsDwBoJ,EAAMC,kBAGhCR,EAASY,OAAOE,MAAM,IAAI,SAACtC,EAAO+B,GAChCpD,EF9CK,CACLN,KAAM,eACN1F,ME4CqBoJ,EAAMC,kBAG7BR,EAASY,OAAOG,QAAQ,IAAI,SAACvC,EAAO+B,GAClCpD,EFdK,CACLN,KAAM,uBEgBRmD,EAASY,OAAOI,SAAS,IAAI,SAACxC,EAAO+B,GACnCpD,EFlBK,CACLN,KAAM,uBEoBRmD,EAASY,OAAOK,MAAM,IAAI,SAACzC,EAAO+B,GAChCpD,EFwCK,CACLN,KAAM,aACN1F,ME1CmBoJ,EAAMC,kBACxB,2CACJ,gBApB6B,wCAgDjBU,GAAY,wCAAG,WAC1B/D,EACA0B,EACAmB,EACAR,EACArK,GAAO,iFAEgB,qBAAZA,EAAuB,iCAEL0J,EAAKO,IAAI+B,WAAWhM,GAAS,KAAD,EAGvD,OAHMiM,EAAY,OAClBjE,EF1FK,CACLN,KAAM,uBACN7H,QEwF4BoM,IAE5B,SAC2B5B,EAAM6B,QAAQC,UAAUnM,GAASoM,OAAO,KAAD,EAGlE,OAHMC,EAAY,OAClBrE,EAASL,GAAmB0E,IAE5B,UACmCxB,EAASqB,QACzCC,UAAU9M,EAAeW,GACzBoM,OAAO,KAAD,GAGT,OALME,EAAoB,OAG1BtE,EAASJ,GAA2B0E,IAEpC,UACmCzB,EAASqB,QACzCC,UAAU9B,EAAMkC,QAAQ7B,QAAS1K,GACjCoM,OAAO,KAAD,GAFHI,EAAoB,OAG1BxE,EAASH,GAA2B2E,IAGpCxE,EFjFK,CACLN,KAAM,oBEgFqB,wBAE3BkB,OAAOiB,MAAM,8BAA8B,4CAE9C,gBAjCwB,8C,oBChKV,eACb,MAAY,UADiB,EAAJnC,KAEhB,2BAAOQ,UAAU,0CAEjB,yBAAKA,UAAU,2CCOpBuE,GAAc,SAACzK,EAAO0K,GAC1B,IAAQ1E,EAAgC0E,EAAhC1E,SAAU6C,EAAsB6B,EAAtB7B,SAAU7K,EAAY0M,EAAZ1M,QAE5B,OACE,kBAAC2M,GAAA,EAAc,CACbC,IAAK5K,EAAMc,GACX+J,UAAU,OACVC,QACE,kBAACC,GAAA,EAAO,CAACjK,GAAId,EAAMc,IAAG,wBACFd,EAAMoC,mBAI5B,wBACEwI,IAAK5K,EAAMc,GACXoF,UAAU,mBACVS,QAAS,SAAC5H,GAAC,OFwHM,SAACiH,EAAU6C,EAAU7I,EAAOhC,GACnD6K,EAASqB,QACNc,UAAUhL,EAAMc,IAChBmK,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EFtFG,CACLN,KAAM,qBEuFLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQC,IAAIE,GACZT,OAAOiB,MAAM,0BEjIKmD,CAAUhF,EAAU6C,EAAU7I,EAAOhC,KAErD,4BAAKgC,EAAMI,aACX,wBAAI8F,UAAS,eAAUlG,EAAMmC,iBAAmBnC,EAAMQ,YACtD,4BAAKR,EAAMG,gBAsBbkL,GAAS,kHAgBZ,OAhBY,mCACb,WACE,OACE,yBAAKnF,UAAU,YACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,eAAc,cAG7B,yBAAKA,UAAU,wBACb,2BAAOA,UAAU,mCACboF,KAAKZ,MAAMa,cA1BL,SAACb,GACrB,IAAQc,EAAcd,EAAdc,UAER,OACE,+BACGA,EAAUxJ,WAAWjC,KAAI,SAACC,GAAK,OAAKyK,GAAYzK,EAAO0K,MACxD,4BACE,4BAAI,QACJ,4BAAI,YACJ,4BAAI,QAELc,EAAUzJ,UAAUhC,KAAI,SAACC,GAAK,OAAKyK,GAAYzK,EAAO0K,OAelBa,CAAcD,KAAKZ,OAAS,kBAACe,GAAO,CAAC/F,KAAK,kBAMlF,EAhBY,CAASgG,aA+BTC,oBAZf,SAAyB1N,GACvB,IAAMwD,EAAkBE,EAAwB1D,GAC1C2N,EAAehH,GAAqB3G,GAE1C,MAAO,CACLuN,UAAW5J,EAAkB3D,GAC7BsN,cAAe9J,IAAoBmK,EACnC/C,SAAUhK,EAAiBZ,GAC3BD,QAASG,EAAgBF,MAId0N,CAAyBN,IC9DlCQ,GAAM,kHAuBT,OAvBS,mCACV,WACE,OACE,yBAAK3F,UAAU,YACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,eAAc,UAG7B,yBAAKA,UAAU,aACb,2BAAOA,UAAU,mCACf,+BACE,4BACE,4BAAI,QACJ,4BAAI,QACJ,4BAAI,cAGNoF,KAAKZ,MAAMtL,oBAjCDG,EAiCuC+L,KAAKZ,MAAMnL,aA/BxE,+BACIA,EAAaQ,KAAI,SAACC,GAClB,OACE,wBAAIkG,UAAS,gBAAWlG,EAAMc,IAAM8J,IAAK5K,EAAMc,IAC7C,wBAAIoF,UAAU,cAAclG,EAAMS,oBAClC,4BAAKT,EAAMI,aACX,wBAAI8F,UAAS,eAAUlG,EAAMa,kBAAoBb,EAAMQ,kBAyByB,kBAACiL,GAAO,CAAC/F,KAAK,cAjCjF,IAACnG,MAuCvB,EAvBS,CAASmM,aAiCNC,oBAPf,SAAyB1N,GACvB,MAAO,CACLmB,mBAAoBE,EAA2BrB,GAC/CsB,aAAcC,EAAqBvB,MAIxB0N,CAAyBE,I,oBCxBlCC,GAAmB,SAACpB,GACxB,IAAQqB,EAA8CrB,EAA9CqB,aAAc/F,EAAgC0E,EAAhC1E,SAAU6C,EAAsB6B,EAAtB7B,SAAU7K,EAAY0M,EAAZ1M,QAE1C,OACE,+BACI+N,EAAahM,KAAI,SAACC,GAClB,OACE,wBAAI4K,IAAK5K,EAAMc,IACb,wBAAIoF,UAAS,eAAUlG,EAAMmC,iBAAmBnC,EAAMI,aACtD,wBAAI8F,UAAS,eAAUlG,EAAMmC,iBAAmBnC,EAAMQ,YACtD,wBACE0F,UAAU,0BACVS,QAAS,SAAC5H,IJ2FG,SAACiH,EAAU6C,EAAU7I,EAAOhC,GACrD6K,EAASqB,QACN8B,YAAYhM,EAAMc,IAClBmK,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EFvFG,CACLN,KAAM,wBEwFLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQC,IAAIE,GACZT,OAAOiB,MAAM,0BInGHmE,CAAYhG,EAAU6C,EAAU7I,EAAOhC,KAE1C,WAQPiO,GAAc,kHAqCjB,OArCiB,mCAClB,WACE,OACE,yBAAK/F,UAAU,2BACb,yBAAKA,UAAU,eAAc,mBAG7B,yBAAKA,UAAU,aACb,kBAACgG,GAAA,EAAI,CAACC,iBAAiB,SAASjG,UAAU,sBACxC,kBAACkG,GAAA,EAAG,CAACC,SAAS,SAASC,MAAM,SAASpG,UAAU,WAC9C,2BAAOA,UAAU,mCACf,+BACE,4BACE,4BAAI,QACJ,4BAAI,QACJ,4BAAI,cAGNoF,KAAKZ,MAAM6B,mBA3DF,SAAC7B,GAC1B,IAAQ8B,EAAmB9B,EAAnB8B,eAER,OACE,+BACIA,EAAezM,KAAI,SAACC,GACpB,OACE,wBAAI4K,IAAK5K,EAAMc,IACb,wBAAIoF,UAAU,cAAclG,EAAMS,oBAClC,wBAAIyF,UAAS,eAAUlG,EAAMmC,iBAAmBnC,EAAM4C,UAAW5C,EAAMI,aACvE,wBAAI8F,UAAS,eAAUlG,EAAMmC,iBAAmBnC,EAAMQ,iBAiDhB+L,CAAmBjB,KAAKZ,OAAS,kBAACe,GAAO,CAAC/F,KAAK,YAGrF,kBAAC0G,GAAA,EAAG,CAACC,SAAS,SAASC,MAAM,UAC3B,2BAAOpG,UAAU,mCACf,+BACE,4BACE,4BAAI,UACJ,4BAAI,YACJ,4BAAI,YAGNoF,KAAKZ,MAAMoB,iBAAmBA,GAAiBR,KAAKZ,OAAS,kBAACe,GAAO,CAAC/F,KAAK,mBAO1F,EArCiB,CAASgG,aAsDdC,oBAdf,SAAyB1N,GACvB,IAAMwO,EAAqB5J,GAA2B5E,GAChDyO,EAAkBhI,GAAwBzG,GAEhD,MAAO,CACLuO,eAAgBlK,EAAuBrE,GACvCsO,mBAAoBlK,EAA6BpE,GACjD8N,aAAcjJ,GAAqB7E,GACnC6N,iBAAkBW,IAAuBC,EACzC7D,SAAUhK,EAAiBZ,GAC3BD,QAASG,EAAgBF,MAId0N,CAAyBM,I,qBC9G3BU,GAAe,CAC1BC,MAAO,CACLC,WAAY,CAAEC,SAAS,GACvBC,QAAS,CAAEC,MAAM,GACjBC,MAAO,SAETC,QAAS,CACPJ,SAAS,EACTK,OAAO,EACPC,MAAO,CACLC,SAAU,OACVC,gBAAYC,GAEdhJ,EAAG,CACCyI,MAAM,EACNpM,OAAQ,SACR4M,eAAWD,GAEf9I,EAAG,CACDuI,MAAM,EACNV,MAAO,SAETmB,OAAQ,CACNT,MAAM,GAERU,MAAO,CACJC,QAAS,QAEZC,MAAO,CACHd,SAAS,EACTe,SAAU,WACVC,QAAS,EACTC,QAAS,IAGfC,MAAO,CACLtI,KAAM,WACNuI,OAAQ,CACNjB,MAAM,EACNI,MAAO,CACHc,OAAQ,OACRb,SAAU,MACVc,SAAU,4BAIlBC,MAAO,CACLH,OAAQ,CACNjB,MAAM,EACNqB,SAAU,EACVC,SAAU,IACVlB,MAAO,CACLmB,MAAO,OACPlB,SAAU,MACVc,SAAU,0BAEZL,QAAS,EACTC,QAAS,EACTS,OAAQ,KCtCRC,ID+CK,IAAIjK,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,UAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YC3RG,SAACkK,GACtB,OACE,yBAAKxI,UAAU,eACb,yBAAKA,UAAU,SACb,4BAAI,iBAZa,MAYgBwI,EAAWlL,gBAXvC,0BAAM0C,UAAU,gBAAe,UAE/B,0BAAMA,UAAU,eAAc,UAS0B,SAASwI,EAAWnL,YAEnF,kBAAC,KAAK,CAACgH,QAASoC,GAAclJ,OAAQiL,EAAWjL,OAAQiC,KAAK,cAAcuH,MAAM,OAAO0B,OAAO,YAKhGC,GAAU,kHAYb,OAZa,mCACd,WACE,OACE,yBAAK1I,UAAU,2BACb,yBAAKA,UAAU,eAAc,eAG7B,yBAAKA,UAAU,aACZoF,KAAKZ,MAAMmE,iBAAmBJ,GAAenD,KAAKZ,MAAMgE,YAAc,kBAACjD,GAAO,YAItF,EAZa,CAASC,aAuBVC,oBARf,SAAyB1N,GAEvB,MAAO,CACL4Q,iBAAkB5L,GAAyBhF,GAC3CyQ,WAAYxL,GAAmBjF,MAIpB0N,CAAyBiD,I,cCrDxC,mmGAAApH,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA+BA,IAAMsH,GAAW,SAACpE,GAChB,IACE1E,EAaE0E,EAbF1E,SACA6C,EAYE6B,EAZF7B,SACAnB,EAWEgD,EAXFhD,KACA1J,EAUE0M,EAVF1M,QACAiM,EASES,EATFT,aACAI,EAQEK,EARFL,aACAC,EAOEI,EAPFJ,qBACAE,EAMEE,EANFF,qBACAuE,EAKErE,EALFqE,mBACA1G,EAIEqC,EAJFrC,MACA2G,EAGEtE,EAHFsE,mBACAC,EAEEvE,EAFFuE,oBACAC,EACExE,EADFwE,oBAGF,OACE,kBAAChD,GAAA,EAAI,CAACC,iBAAiB,UAAUjG,UAAU,sBAEzC,kBAACkG,GAAA,EAAG,CAACC,SAAS,UAAUC,MAAM,UAAUpG,UAAU,WAChD,2BAAOA,UAAU,mCACf,+BACE,4BACE,4BAAI,SACJ,4BAAI,UACJ,4BAAI,cAGR,+BACE,4BACE,4BAAI,OACJ,4BAAK+D,GACL,4BAAKK,MAKX,0BAAMpE,UAAU,MAAMiJ,SAAU,SAAC/F,GAC/BA,EAAMgG,iBP8HY,SAACpJ,EAAU6C,EAAUnB,EAAMvC,EAAQnH,GAC7D6K,EAASqB,QACNmF,eACApE,KAAK,CAAEC,KAAMlN,EAASsR,MAAO5H,EAAK6H,MAAMC,MAAMrK,EAAQ,WACtDgG,GAAG,mBAAmB,SAACC,GACtBpF,EFtFG,CACLN,KAAM,wBEuFLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQG,MAAMA,GACdT,OAAOiB,MAAM,0BOtITwH,CAAarJ,EAAU6C,EAAUnB,EAAMqH,EAAoB/Q,KAE3D,yBAAKkI,UAAU,yBACb,2BACAR,KAAK,OACL+J,YAAY,aACZC,SAAU,SAAC3Q,GAAC,OAAKiH,ET4CpB,CACLN,KAAM,+BACNP,OS9C6DpG,EAAE0H,OAAO6I,SAC9DpJ,UAAU,kDACVyJ,UAAQ,KAEV,yBAAKzJ,UAAU,8BACb,4BAAQR,KAAK,SAASQ,UAAU,oCAAmC,aAIvE,2BAAOA,UAAU,mCACf,+BACE,4BACE,4BAAI,QACJ,4BAAKmE,GACL,4BAAKG,MAKX,0BAAMtE,UAAU,MAAMiJ,SAAU,SAAC/F,GAC/BA,EAAMgG,iBP6HY,SAC1BpJ,EACA6C,EACAnB,EACAW,EACAlD,EACAnH,GAEAmH,EAASuC,EAAK6H,MAAMC,MAAMrK,EAAQ,SAElCkD,EAAM6B,QACH0F,QAAQ/G,EAAS0B,QAAQ7B,QAASvD,GAClC8F,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBvC,EAASqB,QACN2F,aAAaxH,EAAMkC,QAAQ7B,QAASvD,GACpC8F,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EF7HD,CACLN,KAAM,wBE8HDyF,GAAG,SAAS,SAAC9D,GACZH,QAAQG,MAAMA,GACdT,OAAOiB,MAAM,6BOlJbgI,CAAa7J,EAAU6C,EAAUnB,EAAMW,EAAO2G,EAAoBhR,KAElE,yBAAKkI,UAAU,yBACb,2BACAR,KAAK,OACL+J,YAAY,cACZC,SAAU,SAAC3Q,GAAC,OAAKiH,ET+BpB,CACLN,KAAM,+BACNP,OSjC6DpG,EAAE0H,OAAO6I,SAC9DpJ,UAAU,kDACVyJ,UAAQ,KAEV,yBAAKzJ,UAAU,8BACb,4BAAQR,KAAK,SAASQ,UAAU,oCAAmC,cAMzE,kBAACkG,GAAA,EAAG,CAACC,SAAS,WAAWC,MAAM,WAAWpG,UAAU,WAElD,2BAAOA,UAAU,mCACf,+BACE,4BACE,4BAAI,SACJ,4BAAI,UACJ,4BAAI,cAGR,+BACE,4BACE,4BAAI,OACJ,4BAAK+D,GACL,4BAAKK,MAKX,0BAAMpE,UAAU,MAAMiJ,SAAU,SAAC/F,GAC/BA,EAAMgG,iBP0Ea,SAACpJ,EAAU6C,EAAUnB,EAAMvC,EAAQnH,GAC9D6K,EAASqB,QACN4F,cAAcpI,EAAK6H,MAAMC,MAAMrK,EAAQ,UACvC8F,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EFnGG,CACLN,KAAM,wBEoGLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQG,MAAMA,GACdT,OAAOiB,MAAM,0BOlFTiI,CAAc9J,EAAU6C,EAAUnB,EAAMuH,EAAqBjR,KAE7D,yBAAKkI,UAAU,yBACb,2BACAR,KAAK,OACL+J,YAAY,aACZC,SAAU,SAAC3Q,GAAC,OAAKiH,ETdpB,CACLN,KAAM,gCACNP,OSY8DpG,EAAE0H,OAAO6I,SAC/DpJ,UAAU,kDACVyJ,UAAQ,KAEV,yBAAKzJ,UAAU,8BACb,4BAAQR,KAAK,SAASQ,UAAU,oCAAmC,cAIvE,2BAAOA,UAAU,mCACf,+BACE,4BACE,4BAAI,QACJ,4BAAKmE,GACL,4BAAKG,MAKX,0BAAMtE,UAAU,MAAMiJ,SAAU,SAAC/F,GAC/BA,EAAMgG,iBPuFa,SAC3BpJ,EACA6C,EACAnB,EACAW,EACAlD,EACAnH,GAEA6K,EAASqB,QACN6F,cAAc1H,EAAMkC,QAAQ7B,QAAShB,EAAK6H,MAAMC,MAAMrK,EAAQ,UAC9D8F,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EFlJG,CACLN,KAAM,wBEmJLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQG,MAAMA,GACdT,OAAOiB,MAAM,0BOtGTkI,CAAc/J,EAAU6C,EAAUnB,EAAMW,EAAO6G,EAAqBlR,KAEpE,yBAAKkI,UAAU,yBACb,2BACAR,KAAK,OACL+J,YAAY,cACZC,SAAU,SAAC3Q,GAAC,OAAKiH,ET3BpB,CACLN,KAAM,gCACNP,OSyB8DpG,EAAE0H,OAAO6I,SAC/DpJ,UAAU,kDACVyJ,UAAQ,KAEV,yBAAKzJ,UAAU,8BACb,4BAAQR,KAAK,SAASQ,UAAU,oCAAmC,iBASzE8J,GAAO,kHAqBV,OArBU,+CACX,WACE1E,KAAK2E,uBACN,wEAED,+FACkD,OADlD,EACuD3E,KAAKZ,MAAlD1E,EAAQ,EAARA,SAAU0B,EAAI,EAAJA,KAAMmB,EAAQ,EAARA,SAAUR,EAAK,EAALA,MAAOrK,EAAO,EAAPA,QAAO,SAC1C+L,GAAa/D,EAAU0B,EAAMmB,EAAUR,EAAOrK,GAAQ,gDAC7D,kDALA,IAKA,oBAED,WACE,OACE,yBAAKkI,UAAU,2BACb,yBAAKA,UAAU,eAAc,WAG7B,yBAAKA,UAAU,aACZoF,KAAKZ,MAAMoE,SAAWA,GAASxD,KAAKZ,OAAS,kBAACe,GAAO,YAI7D,EArBU,CAASC,aA6CPC,oBArBf,SAAyB1N,GACvB,IAAMiS,EAAkBrL,GAAwB5G,GAEhD,MAAO,CACLD,QAASG,EAAgBF,GACzB4K,SAAUhK,EAAiBZ,GAC3BoK,MAAO5J,EAAcR,GACrByJ,KAAMpJ,EAAaL,GACnBgM,aAAcnF,GAAqB7G,GACnCoM,aAActF,GAAqB9G,GACnCqM,qBAAsBtF,GAA6B/G,GACnDuM,qBAAsBvF,GAA6BhH,GACnDiS,kBACApB,UAAWoB,EACXnB,mBAAoB7J,GAA2BjH,GAC/CgR,oBAAqB7J,GAA4BnH,GACjD+Q,mBAAoB3J,GAA2BpH,GAC/CiR,oBAAqB5J,GAA4BrH,MAItC0N,CAAyBqE,IC9MlClB,GAAW,SAACpE,GAChB,IACE1E,EASE0E,EATF1E,SACAmK,EAQEzF,EARFyF,SACAtH,EAOE6B,EAPF7B,SACAR,EAMEqC,EANFrC,MACAX,EAKEgD,EALFhD,KACA1J,EAIE0M,EAJF1M,QACAoS,EAGE1F,EAHF0F,UACAC,EAEE3F,EAFF2F,aACAC,EACE5F,EADF4F,cAGF,OACE,kBAACpE,GAAA,EAAI,CAACC,iBAAiB,MAAMjG,UAAU,sBAErC,kBAACkG,GAAA,EAAG,CAACC,SAAS,MAAMC,MAAM,MAAMpG,UAAU,WAEtC,0BAAMiJ,SAAU,SAAC/F,GACfA,EAAMgG,iBRoOU,SAC1BpJ,EACA6C,EACAR,EACAX,EACA1H,EACAhC,GAEA,IAAMuS,EAAWlI,EAAMkC,QAAQ7B,QACzBnI,EAAYmH,EAAK6H,MAAMC,MAAMxP,EAAMmF,OAAQ,SAE3C7E,EAAaoH,EAAK6H,MAAMC,OAC3BxP,EAAMmF,OAASnF,EAAMwQ,OAAOC,WAC7B,SAGF5H,EAASqB,QACNwG,UAAUH,EAAUhQ,EAPLlD,6CAO2BiD,GAC1C2K,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EF7HG,CACLN,KAAM,wBE8HLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQG,MAAMA,GACdT,OAAOiB,MAAM,0BQ3PP8I,CAAa3K,EAAU6C,EAAUR,EAAOX,EAAMyI,EAAUnS,KAE1D,yBAAKkI,UAAU,oBACb,+BAAO,qBACP,yBAAKA,UAAU,eACb,2BACER,KAAK,OACLQ,UAAU,kDACVuJ,YAAY,aACZC,SAAU,SAAC3Q,GAAC,OAAKiH,EVmGxB,CACLN,KAAM,2BACNP,OUrG8DpG,EAAE0H,OAAO6I,SAC3DK,UAAQ,MAId,yBAAKzJ,UAAU,oBACb,+BAAO,aACP,yBAAKA,UAAU,eACb,2BACER,KAAK,OACLQ,UAAU,kDACVuJ,YAAY,YACZC,SAAU,SAAC3Q,GAAC,OAAKiH,EV8FxB,CACLN,KAAM,0BACN8K,MUhG6DzR,EAAE0H,OAAO6I,SAC1DK,UAAQ,MAId,4BAAQjK,KAAK,SAASQ,UAAU,oCAAmC,aACjEmK,EAAe,+BAAO,UAAQF,EAAShL,OAASgL,EAASK,MAAM,QAAe,OAKpF,kBAACpE,GAAA,EAAG,CAACC,SAAS,OAAOC,MAAM,OAAOpG,UAAU,WAE1C,0BAAMiJ,SAAU,SAAC/F,GACfA,EAAMgG,iBR4Na,SAC3BpJ,EACA6C,EACAR,EACAX,EACA1H,EACAhC,GAEA,IACMuC,EAAYmH,EAAK6H,MAAMC,OAC1BxP,EAAMmF,OAASnF,EAAMwQ,OAAOC,WAC7B,SAEIpQ,EAAYgI,EAAMkC,QAAQ7B,QAC1BpI,EAAaoH,EAAK6H,MAAMC,MAAMxP,EAAMmF,OAAQ,SAElD0D,EAASqB,QACNwG,UATcrT,6CASMkD,EAAWF,EAAWC,GAC1C2K,KAAK,CAAEC,KAAMlN,IACbmN,GAAG,mBAAmB,SAACC,GACtBpF,EF5HG,CACLN,KAAM,yBE6HLyF,GAAG,SAAS,SAAC9D,GACZH,QAAQG,MAAMA,GACdT,OAAOiB,MAAM,0BQnPT+I,CAAc5K,EAAU6C,EAAUR,EAAOX,EAAM0I,EAAWpS,KAE5D,yBAAKkI,UAAU,oBACb,+BAAO,mBACP,yBAAKA,UAAU,eACb,2BACER,KAAK,OACLQ,UAAU,kDACVuJ,YAAY,cACZC,SAAU,SAAC3Q,GAAC,OAAKiH,EV4FtB,CACLN,KAAM,4BACNP,OU9F6DpG,EAAE0H,OAAO6I,SAC5DK,UAAQ,MAId,yBAAKzJ,UAAU,oBACb,+BAAO,cACP,yBAAKA,UAAU,eACb,2BACER,KAAK,OACLQ,UAAU,kDACVuJ,YAAY,aACZC,SAAU,SAAC3Q,GAAC,OAAKiH,EVuFtB,CACLN,KAAM,2BACN8K,MUzF4DzR,EAAE0H,OAAO6I,SAC3DK,UAAQ,MAId,4BAAQjK,KAAK,SAASQ,UAAU,oCAAmC,cACjEoK,EAAgB,+BAAO,UAAQF,EAAUjL,OAASiL,EAAUI,MAAM,QAAe,SAQrFK,GAAQ,kHAaX,OAbW,mCAEZ,WACE,OACE,yBAAK3K,UAAU,2BACb,yBAAKA,UAAU,eAAc,aAG7B,yBAAKA,UAAU,aACZoF,KAAKZ,MAAMoE,SAAWA,GAASxD,KAAKZ,OAAS,kBAACe,GAAO,YAI7D,EAbW,CAASC,aAiCRC,oBAjBf,SAAyB1N,GACvB,IAAMkS,EAAW5K,GAAiBtH,GAC5BmS,EAAY5K,GAAkBvH,GAEpC,MAAO,CACLD,QAASG,EAAgBF,GACzB4K,SAAUhK,EAAiBZ,GAC3BoK,MAAO5J,EAAcR,GACrByJ,KAAMpJ,EAAaL,GACnBkS,WACAC,YACAtB,UAAWqB,EAASW,SAAWV,EAAUU,OACzCT,aAAcF,EAAShL,QAAUgL,EAASK,MAC1CF,cAAeF,EAAUjL,QAAUiL,EAAUI,SAIlC7E,CAAyBkF,I,cClJxC,mmGAAArJ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAQiC,IAE3BuJ,GAAO,kHA0BV,OA1BU,+CACX,WACEzF,KAAK2E,mBAAmB3E,KAAKZ,SAC9B,wEAED,WAAyBA,GAAK,0EACF,OAAlB1E,EAAuB0E,EAAvB1E,SAAU6C,EAAa6B,EAAb7B,SAAQ,SACpBE,GAAcF,EAAU7C,GAAS,uBACjCwD,GAAkBX,EAAU7C,GAAS,2CAC5C,mDANA,IAMA,oBAED,WACE,OACE,yBAAKE,UAAU,WACb,yBAAKA,UAAU,kBACb,kBAAC,GAAO,MACR,kBAAC,GAAQ,OAEX,kBAAC,GAAS,MACV,yBAAKA,UAAU,kBACb,kBAAC,GAAU,MACX,kBAAC,GAAc,OAEjB,kBAAC,GAAM,WAGZ,EA1BU,CAASwF,aAmCPC,oBANf,SAAyB1N,GACvB,MAAO,CACL4K,SAAUhK,EAAiBZ,MAIhB0N,CAAyBoF,I,cC7CxC,mmGAAAvJ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAU6D,IAEvDwJ,GAAG,kHAoCN,OApCM,+CACP,WACE1F,KAAK2E,mBAAmB3E,KAAKZ,MAAM1E,YACpC,wEAED,WAAyBA,GAAQ,0FACZyB,GAASzB,GAAU,KAAD,EAA3B,OAAJ0B,EAAI,gBACcA,EAAKO,IAAIgJ,IAAIC,QAAQ,KAAD,EAA7B,OAAT9I,EAAS,gBACTJ,GAAYN,EAAM1B,GAAU,KAAD,mBACbmC,GAAUT,EAAMU,EAAWpC,GAAU,KAAD,GAA7C,UACA,CAAD,gBAGN,OAFFY,OAAOiB,MACL,0GACA,4CAGmBe,GAAalB,EAAMU,EAAWpC,GAAU,KAAD,GAAhD,UACA,CAAD,gBAGT,OAFFY,OAAOiB,MACL,6GACA,+DAGL,mDApBA,IAoBA,oBAED,WACE,OACE,6BACE,kBAAC,GAAM,MACNyD,KAAKZ,MAAMyG,gBACV,kBAAC,GAAO,MAER,yBAAKjL,UAAU,iBAItB,EApCM,CAASwF,aA6CHC,oBANf,SAAyB1N,GACvB,MAAO,CACLkT,gBAAiBnS,EAAwBf,MAI9B0N,CAAyBqF,I,4BC8ExC,IAMeI,GANKC,aAAgB,CAClC3J,KAvIF,WAAmC,IAArBzJ,EAAK,uDAAG,GAAIqT,EAAM,uCAC9B,OAAQA,EAAO5L,MACb,IAAK,cACH,OAAO,2BAAKzH,GAAK,IAAG2J,WAAY0J,EAAO1J,aACzC,IAAK,sBACH,OAAO,2BAAK3J,GAAK,IAAED,QAASsT,EAAOtT,UACrC,IAAK,uBACH,OAAO,2BAAKC,GAAK,IAAEJ,QAASyT,EAAOzT,UACrC,QACE,OAAOI,IA+HXoK,MA3HF,WAAoC,IAArBpK,EAAK,uDAAG,GAAIqT,EAAM,uCAC/B,OAAQA,EAAO5L,MACb,IAAK,eACH,OAAO,2BAAKzH,GAAK,IAAEkB,QAAQ,EAAMwJ,SAAU2I,EAAO3I,WACpD,IAAK,uBACH,OAAO,2BAAK1K,GAAK,IAAEJ,QAASyT,EAAOzT,UACrC,QACE,OAAOI,IAqHX4K,SAjHF,WAAuC,IAC1BnF,EADKzF,EAAK,uDAAG,GAAIqT,EAAM,uCAGlC,OAAQA,EAAO5L,MACb,IAAK,kBACH,OAAO,2BAAKzH,GAAK,IAAEkB,QAAQ,EAAMwJ,SAAU2I,EAAO3I,WACpD,IAAK,0BACH,OAAO,2BAAK1K,GAAK,IAAEiB,gBAAiB,CAAEC,QAAQ,EAAMuE,KAAM4N,EAAOpS,mBACnE,IAAK,uBACH,OAAO,2BAAKjB,GAAK,IAAEsB,aAAc,CAAEJ,QAAQ,EAAMuE,KAAM4N,EAAO/R,gBAChE,IAAK,oBACH,OAAO,2BAAKtB,GAAK,IAAEiD,UAAW,CAAE/B,QAAQ,EAAMuE,KAAM4N,EAAOpQ,aAC7D,IAAK,mBACH,OAAO,2BAAKjD,GAAK,IAAEyO,iBAAiB,IACtC,IAAK,kBACH,OAAO,2BACFzO,GAAK,IACRyO,iBAAiB,EACjBxN,gBAAgB,2BACXjB,EAAMiB,iBAAe,IACxBwE,KAAK,GAAD,oBACCzF,EAAMiB,gBAAgBwE,MAAI,CAC7B4N,EAAOtR,YAIf,IAAK,eAUH,OALE0D,GADY,IAFNzF,EAAMsB,aAAamE,KAAK6N,WAAU,SAAAvR,GAAK,OAAIA,EAAMc,KAAOwQ,EAAOtR,MAAMc,MAGvE,uBAAO7C,EAAMsB,aAAamE,MAAI,CAAE4N,EAAOtR,QAEpC/B,EAAMsB,aAAamE,KAGrB,2BACFzF,GAAK,IACR2N,cAAc,EACdrM,aAAa,2BACRtB,EAAMsB,cAAY,IACrBmE,WAIN,IAAK,gBACH,OAAO,2BAAKzF,GAAK,IAAE2N,cAAc,IAEnC,IAAK,gCACH,OAAO,2BAAK3N,GAAK,IAAEgM,aAAcqH,EAAOzT,UAC1C,IAAK,gCACH,OAAO,2BAAKI,GAAK,IAAEoM,aAAciH,EAAOzT,UAC1C,IAAK,mBACH,OAAO,2BAAKI,GAAK,IAAEiS,iBAAiB,IACtC,IAAK,kBACH,OAAO,2BAAKjS,GAAK,IAAEiS,iBAAiB,IACtC,IAAK,+BACH,OAAO,2BAAKjS,GAAK,IAAE8Q,mBAAoBuC,EAAOnM,SAChD,IAAK,gCACH,OAAO,2BAAKlH,GAAK,IAAEgR,oBAAqBqC,EAAOnM,SACjD,IAAK,+BACH,OAAO,2BAAKlH,GAAK,IAAE+Q,mBAAoBsC,EAAOnM,SAChD,IAAK,gCACH,OAAO,2BAAKlH,GAAK,IAAEiR,oBAAqBoC,EAAOnM,SAEjD,IAAK,2BACH,OAAO,2BAAKlH,GAAK,IAAEkS,SAAS,2BAAMlS,EAAMkS,UAAQ,IAAEhL,OAAQmM,EAAOnM,WACnE,IAAK,0BACH,OAAO,2BAAKlH,GAAK,IAAEkS,SAAS,2BAAMlS,EAAMkS,UAAQ,IAAEK,MAAOc,EAAOd,UAClE,IAAK,mBACH,OAAO,2BAAKvS,GAAK,IAAEkS,SAAS,2BAAMlS,EAAMkS,UAAQ,IAAEhL,OAAQ,KAAMqL,MAAO,KAAMM,QAAQ,MAEvF,IAAK,aAUH,OALEpN,GADY,IAFNzF,EAAMiD,UAAUwC,KAAK6N,WAAU,SAAAvR,GAAK,OAAIA,EAAMc,KAAOwQ,EAAOtR,MAAMc,MAGpE,uBAAO7C,EAAMiD,UAAUwC,MAAI,CAAE4N,EAAOtR,QAEjC/B,EAAMiD,UAAUwC,KAGlB,2BACFzF,GAAK,IACRiD,UAAU,2BACLjD,EAAMiD,WAAS,IAClBwC,SAEFyM,SAAS,2BACJlS,EAAMkS,UAAQ,IACjBW,QAAQ,IAEVV,UAAU,2BACLnS,EAAMmS,WAAS,IAClBU,QAAQ,MAId,IAAK,4BACH,OAAO,2BAAK7S,GAAK,IAAEmS,UAAU,2BAAMnS,EAAMmS,WAAS,IAAEjL,OAAQmM,EAAOnM,WACrE,IAAK,2BACH,OAAO,2BAAKlH,GAAK,IAAEmS,UAAU,2BAAMnS,EAAMmS,WAAS,IAAEI,MAAOc,EAAOd,UACpE,IAAK,oBACH,OAAO,2BAAKvS,GAAK,IAAEmS,UAAU,2BAAMnS,EAAMmS,WAAS,IAAEjL,OAAQ,KAAMqL,MAAO,KAAMM,QAAQ,MAEzF,QACE,OAAO7S,MChIPuT,GAAmBC,0BACnBC,GAAa,GAGbC,GAAmB/K,OAAOgL,sCAAwCC,KCIxE,IDFuCC,GCEnBC,QACW,cAA7BnL,OAAOkB,SAASkK,UAEe,UAA7BpL,OAAOkB,SAASkK,UAEhBpL,OAAOkB,SAASkK,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAQ,CAACC,MFEHC,aACLjB,GACAU,GACAH,GAAiBW,KAAe,aAAIZ,GAAU,QAAEF,SEJhD,kBAAC,GAAG,OAENe,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3L,MAAK,SAAA4L,GACjCA,EAAaC,kB","file":"static/js/main.e85e8b04.chunk.js","sourcesContent":["export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const DECIMALS = (10**18)\n\n// Shortcut to avoid passing around web3 connection\nexport const ether = (wei) => {\n  if(wei) {\n    return(wei / DECIMALS) // 18 decimal places\n  }\n}\n\n// Tokens and ether havesame decimal resolution\nexport const tokens = ether\n","import { get, groupBy, reject, maxBy, minBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, ether, tokens } from '../helpers'\n\n// TODO: Move me to helpers file\nexport const formatBalance = (balance) => {\n  const precision = 100 // 2 decimal places\n\n  balance = ether(balance)\n  balance = Math.round(balance * precision) / precision // Use 2 decimal places\n\n  return balance\n}\n\nconst account = state => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst tokenLoaded = state => get(state, 'token.loaded', false)\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl)\n\nconst token = state => get(state, 'token.contract')\nexport const tokenSelector = createSelector(token, t => t)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nexport const contractsLoadedSelector = createSelector(\n  tokenLoaded,\n  exchangeLoaded,\n  (tl, el) => (tl && el)\n)\n\n// All Orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, loaded => loaded)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, o => o)\n\n// Filled Orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending for price comparison\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate the orders\n    orders = decorateFilledOrders(orders)\n    // Sort orders by date descending for display\n    orders = orders.sort((a,b) => b.timestamp - a.timestamp)\n    return orders\n  }\n)\n\nconst decorateFilledOrders = (orders) => {\n  // Track previous order to compare history\n  let previousOrder = orders[0]\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateFilledOrder(order, previousOrder)\n      previousOrder = order // Update the previous order once it's decorated\n      return order\n    })\n  )\n}\n\nconst decorateOrder = (order) => {\n  let etherAmount\n  let tokenAmount\n\n  if(order.tokenGive === ETHER_ADDRESS) {\n    etherAmount = order.amountGive\n    tokenAmount = order.amountGet\n  } else {\n    etherAmount = order.amountGet\n    tokenAmount = order.amountGive\n  }\n\n  // Calculate token price to 5 decimal places\n  const precision = 100000\n  let tokenPrice = (etherAmount / tokenAmount)\n  tokenPrice = Math.round(tokenPrice * precision) / precision\n\n  return({\n    ...order,\n    etherAmount: ether(etherAmount),\n    tokenAmount: tokens(tokenAmount),\n    tokenPrice,\n    formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ss a M/D')\n  })\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n  return({\n    ...order,\n    tokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n  })\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n  // Show green price if only one order exists\n  if(previousOrder.id === orderId) {\n    return GREEN\n  }\n\n  // Show green price if order price higher than previous order\n  // Show red price if order price lower than previous order\n  if(previousOrder.tokenPrice <= tokenPrice) {\n    return GREEN // success\n  } else {\n    return RED // danger\n  }\n}\n\nconst openOrders = state => {\n  const all = allOrders(state)\n  const filled = filledOrders(state)\n  const cancelled = cancelledOrders(state)\n\n  const openOrders = reject(all, (order) => {\n    const orderFilled = filled.some((o) => o.id === order.id)\n    const orderCancelled = cancelled.some((o) => o.id === order.id)\n    return(orderFilled || orderCancelled)\n  })\n\n  return openOrders\n}\n\n\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && allOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\n\n// Create the order book\nexport const orderBookSelector = createSelector(\n  openOrders,\n  (orders) => {\n    // Decorate orders\n    orders = decorateOrderBookOrders(orders)\n    // Group orders by \"orderType\"\n    orders = groupBy(orders, 'orderType')\n    // Fetch buy orders\n    const buyOrders = get(orders, 'buy', [])\n    // Sort buy orders by token price\n    orders = {\n      ...orders,\n      buyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n    }\n    // Fetch sell orders\n    const sellOrders = get(orders, 'sell', [])\n    // Sort sell orders by token price\n    orders = {\n      ...orders,\n      sellOrders: sellOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n    }\n    return orders\n  }\n)\n\nconst decorateOrderBookOrders = (orders) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateOrderBookOrder(order)\n      return(order)\n    })\n  )\n}\n\nconst decorateOrderBookOrder = (order) => {\n  const orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n    orderFillAction: orderType === 'buy' ? 'sell' : 'buy'\n  })\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const myFilledOrdersSelector = createSelector(\n  account,\n  filledOrders,\n  (account, orders) => {\n    // Find our orders\n    orders = orders.filter((o) => o.user === account || o.userFill === account)\n    // Sort by date ascending\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate orders - add display attributes\n    orders = decorateMyFilledOrders(orders, account)\n    return orders\n  }\n)\n\nconst decorateMyFilledOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateMyFilledOrder(order, account)\n      return(order)\n    })\n  )\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n  const myOrder = order.user === account\n\n  let orderType\n  if(myOrder) {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  } else {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n  }\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n    orderSign: (orderType === 'buy' ? '+' : '-')\n  })\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\n\nexport const myOpenOrdersSelector = createSelector(\n  account,\n  openOrders,\n  (account, orders) => {\n    // Filter orders created by current account\n    orders = orders.filter((o) => o.user === account)\n    // Decorate orders - add display attributes\n    orders = decorateMyOpenOrders(orders)\n    // Sort orders by date descending\n    orders = orders.sort((a,b) => b.timestamp - a.timestamp)\n    return orders\n  }\n)\n\nconst decorateMyOpenOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateMyOpenOrder(order, account)\n      return(order)\n    })\n  )\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n  let orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n  })\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending to compare history\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate orders - add display attributes\n    orders = orders.map((o) => decorateOrder(o))\n    // Get last 2 order for final price & price change\n    let secondLastOrder, lastOrder\n    [secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n    // get last order price\n    const lastPrice = get(lastOrder, 'tokenPrice', 0)\n    // get second last order price\n    const secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\n    return({\n      lastPrice,\n      lastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n      series: [{\n        data: buildGraphData(orders)\n      }]\n    })\n  }\n)\n\nconst buildGraphData = (orders) => {\n  // Group the orders by hour for the graph\n  orders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n  // Get each hour where data exists\n  const hours = Object.keys(orders)\n  // Build the graph series\n  const graphData = hours.map((hour) => {\n    // Fetch all the orders from current hour\n    const group = orders[hour]\n    // Calculate price values - open, high, low, close\n    const open = group[0] // first order\n    const high = maxBy(group, 'tokenPrice') // high price\n    const low = minBy(group, 'tokenPrice') // low price\n    const close = group[group.length - 1] // last order\n\n    return({\n      x: new Date(hour),\n      y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n    })\n  })\n\n  return graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, status => status)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, status => status)\n\n// BALANCES\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, status => status)\n\nconst etherBalance = state => get(state, 'web3.balance', 0)\nexport const etherBalanceSelector = createSelector(\n  etherBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst tokenBalance = state => get(state, 'token.balance', 0)\nexport const tokenBalanceSelector = createSelector(\n  tokenBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance', 0)\nexport const exchangeEtherBalanceSelector = createSelector(\n  exchangeEtherBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance', 0)\nexport const exchangeTokenBalanceSelector = createSelector(\n  exchangeTokenBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, amount => amount)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, amount => amount)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, amount => amount)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, amount => amount)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, order => order)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, order => order)\n","// WEB3\nexport function web3Loaded(connection) {\n  return {\n    type: 'WEB3_LOADED',\n    connection\n  }\n}\n\nexport function web3AccountLoaded(account) {\n  return {\n    type: 'WEB3_ACCOUNT_LOADED',\n    account\n  }\n}\n\n// TOKEN\nexport function tokenLoaded(contract) {\n  return {\n    type: 'TOKEN_LOADED',\n    contract\n  }\n}\n\n// EXCHANGE\nexport function exchangeLoaded(contract) {\n  return {\n    type: 'EXCHANGE_LOADED',\n    contract\n  }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n  return {\n    type: 'CANCELLED_ORDERS_LOADED',\n    cancelledOrders\n  }\n}\n\nexport function filledOrdersLoaded(filledOrders) {\n  return {\n    type: 'FILLED_ORDERS_LOADED',\n    filledOrders\n  }\n}\n\nexport function allOrdersLoaded(allOrders) {\n  return {\n    type: 'ALL_ORDERS_LOADED',\n    allOrders\n  }\n}\n\n// Cancel Order\nexport function orderCancelling() {\n  return {\n    type: 'ORDER_CANCELLING'\n  }\n}\n\nexport function orderCancelled(order) {\n  return {\n    type: 'ORDER_CANCELLED',\n    order\n  }\n}\n\n// Fill Order\nexport function orderFilling() {\n  return {\n    type: 'ORDER_FILLING'\n  }\n}\n\nexport function orderFilled(order) {\n  return {\n    type: 'ORDER_FILLED',\n    order\n  }\n}\n\n// Balances\nexport function etherBalanceLoaded(balance) {\n  return {\n    type: 'ETHER_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function tokenBalanceLoaded(balance) {\n  return {\n    type: 'TOKEN_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function exchangeEtherBalanceLoaded(balance) {\n  return {\n    type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function exchangeTokenBalanceLoaded(balance) {\n  return {\n    type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function balancesLoaded() {\n  return {\n    type: 'BALANCES_LOADED'\n  }\n}\n\nexport function balancesLoading() {\n  return {\n    type: 'BALANCES_LOADING'\n  }\n}\n\nexport function etherDepositAmountChanged(amount) {\n  return {\n    type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n  return {\n    type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function tokenDepositAmountChanged(amount) {\n  return {\n    type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n  return {\n    type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n    amount\n  }\n}\n\n// Buy Order\nexport function buyOrderAmountChanged(amount) {\n  return {\n    type: 'BUY_ORDER_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function buyOrderPriceChanged(price) {\n  return {\n    type: 'BUY_ORDER_PRICE_CHANGED',\n    price\n  }\n}\n\nexport function buyOrderMaking(price) {\n  return {\n    type: 'BUY_ORDER_MAKING'\n  }\n}\n\n// Generic Order\nexport function orderMade(order) {\n  return {\n    type: 'ORDER_MADE',\n    order\n  }\n}\n\n// Sell Order\nexport function sellOrderAmountChanged(amount) {\n  return {\n    type: 'SELL_ORDER_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function sellOrderPriceChanged(price) {\n  return {\n    type: 'SELL_ORDER_PRICE_CHANGED',\n    price\n  }\n}\n\nexport function sellOrderMaking(price) {\n  return {\n    type: 'SELL_ORDER_MAKING'\n  }\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { accountSelector } from \"../store/selectors\";\nimport { web3AccountLoaded } from \"../store/actions\";\n\nconst connectWallet = (dispatch) => {\n  if (typeof window.ethereum !== \"undefined\") {\n    window.ethereum\n      .request({ method: \"eth_requestAccounts\" })\n      .then((accounts) => {\n        const account = accounts[0];\n\n        console.log(`Wallet connected: ${account}`);\n        dispatch(web3AccountLoaded(account));\n      })\n      .catch((error) => {\n        // Handle error\n        console.log(error, error.code);\n\n        // 4001 - The request was rejected by the user\n        // -32602 - The parameters were invalid\n        // -32603- Internal error\n      });\n  } else {\n    window.open(\"https://metamask.io/download/\", \"_blank\");\n  }\n};\n\nconst Navbar = () => {\n  const account = useSelector(accountSelector);\n  const dispatch = useDispatch();\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"#/\">\n        DApp Token Exchange\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          {account ? (\n            <a\n              className=\"nav-link small\"\n              href={`https://etherscan.io/address/${account}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {account}\n            </a>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={() => {\n                connectWallet(dispatch);\n              }}\n            >\n              Connect Wallet\n            </button>\n          )}\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import Web3 from \"web3\";\nimport {\n  web3Loaded,\n  web3AccountLoaded,\n  tokenLoaded,\n  exchangeLoaded,\n  cancelledOrdersLoaded,\n  filledOrdersLoaded,\n  allOrdersLoaded,\n  orderCancelling,\n  orderCancelled,\n  orderFilling,\n  orderFilled,\n  etherBalanceLoaded,\n  tokenBalanceLoaded,\n  exchangeEtherBalanceLoaded,\n  exchangeTokenBalanceLoaded,\n  balancesLoaded,\n  balancesLoading,\n  buyOrderMaking,\n  sellOrderMaking,\n  orderMade,\n} from \"./actions\";\nimport Token from \"../abis/Token.json\";\nimport Exchange from \"../abis/Exchange.json\";\nimport { ETHER_ADDRESS } from \"../helpers\";\n\nexport const loadWeb3 = async (dispatch) => {\n  if (typeof window.ethereum !== \"undefined\") {\n    const web3 = new Web3(window.ethereum);\n    dispatch(web3Loaded(web3));\n    return web3;\n  } else {\n    window.alert(\"Please install MetaMask\");\n    window.location.assign(\"https://metamask.io/\");\n  }\n};\n\nexport const loadAccount = async (web3, dispatch) => {\n  const accounts = await web3.eth.getAccounts();\n  const account = await accounts[0];\n  if (typeof account !== \"undefined\") {\n    dispatch(web3AccountLoaded(account));\n    return account;\n  } else {\n    window.alert(\"Please login with MetaMask\");\n    return null;\n  }\n};\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n  try {\n    const token = new web3.eth.Contract(\n      Token.abi,\n      Token.networks[networkId].address\n    );\n    dispatch(tokenLoaded(token));\n    return token;\n  } catch (error) {\n    console.log(\n      \"Contract not deployed to the current network. Please select another network with Metamask.\"\n    );\n    return null;\n  }\n};\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n  try {\n    const exchange = new web3.eth.Contract(\n      Exchange.abi,\n      Exchange.networks[networkId].address\n    );\n    dispatch(exchangeLoaded(exchange));\n    return exchange;\n  } catch (error) {\n    console.log(\n      \"Contract not deployed to the current network. Please select another network with Metamask.\"\n    );\n    return null;\n  }\n};\n\nexport const loadAllOrders = async (exchange, dispatch) => {\n  // Fetch cancelled orders with the \"Cancel\" event stream\n  const cancelStream = await exchange.getPastEvents(\"Cancel\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  // Format cancelled orders\n  const cancelledOrders = cancelStream.map((event) => event.returnValues);\n  // Add cancelled orders to the redux store\n  dispatch(cancelledOrdersLoaded(cancelledOrders));\n\n  // Fetch filled orders with the \"Trade\" event stream\n  const tradeStream = await exchange.getPastEvents(\"Trade\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  // Format filled orders\n  const filledOrders = tradeStream.map((event) => event.returnValues);\n  // Add cancelled orders to the redux store\n  dispatch(filledOrdersLoaded(filledOrders));\n\n  // Load order stream\n  const orderStream = await exchange.getPastEvents(\"Order\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  // Format order stream\n  const allOrders = orderStream.map((event) => event.returnValues);\n  // Add open orders to the redux store\n  dispatch(allOrdersLoaded(allOrders));\n};\n\nexport const subscribeToEvents = async (exchange, dispatch) => {\n  exchange.events.Cancel({}, (error, event) => {\n    dispatch(orderCancelled(event.returnValues));\n  });\n\n  exchange.events.Trade({}, (error, event) => {\n    dispatch(orderFilled(event.returnValues));\n  });\n\n  exchange.events.Deposit({}, (error, event) => {\n    dispatch(balancesLoaded());\n  });\n\n  exchange.events.Withdraw({}, (error, event) => {\n    dispatch(balancesLoaded());\n  });\n\n  exchange.events.Order({}, (error, event) => {\n    dispatch(orderMade(event.returnValues));\n  });\n};\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n  exchange.methods\n    .cancelOrder(order.id)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(orderCancelling());\n    })\n    .on(\"error\", (error) => {\n      console.log(error);\n      window.alert(\"There was an error!\");\n    });\n};\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n  exchange.methods\n    .fillOrder(order.id)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(orderFilling());\n    })\n    .on(\"error\", (error) => {\n      console.log(error);\n      window.alert(\"There was an error!\");\n    });\n};\n\nexport const loadBalances = async (\n  dispatch,\n  web3,\n  exchange,\n  token,\n  account\n) => {\n  if (typeof account !== \"undefined\") {\n    // Ether balance in wallet\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    // Token balance in wallet\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n\n    // Ether balance in exchange\n    const exchangeEtherBalance = await exchange.methods\n      .balanceOf(ETHER_ADDRESS, account)\n      .call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    // Token balance in exchange\n    const exchangeTokenBalance = await exchange.methods\n      .balanceOf(token.options.address, account)\n      .call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    // Trigger all balances loaded\n    dispatch(balancesLoaded());\n  } else {\n    window.alert(\"Please login with MetaMask\");\n  }\n};\n\nexport const depositEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods\n    .depositEther()\n    .send({ from: account, value: web3.utils.toWei(amount, \"ether\") })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(balancesLoading());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const withdrawEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods\n    .withdrawEther(web3.utils.toWei(amount, \"ether\"))\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(balancesLoading());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const depositToken = (\n  dispatch,\n  exchange,\n  web3,\n  token,\n  amount,\n  account\n) => {\n  amount = web3.utils.toWei(amount, \"ether\");\n\n  token.methods\n    .approve(exchange.options.address, amount)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      exchange.methods\n        .depositToken(token.options.address, amount)\n        .send({ from: account })\n        .on(\"transactionHash\", (hash) => {\n          dispatch(balancesLoading());\n        })\n        .on(\"error\", (error) => {\n          console.error(error);\n          window.alert(`There was an error!`);\n        });\n    });\n};\n\nexport const withdrawToken = (\n  dispatch,\n  exchange,\n  web3,\n  token,\n  amount,\n  account\n) => {\n  exchange.methods\n    .withdrawToken(token.options.address, web3.utils.toWei(amount, \"ether\"))\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(balancesLoading());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const makeBuyOrder = (\n  dispatch,\n  exchange,\n  token,\n  web3,\n  order,\n  account\n) => {\n  const tokenGet = token.options.address;\n  const amountGet = web3.utils.toWei(order.amount, \"ether\");\n  const tokenGive = ETHER_ADDRESS;\n  const amountGive = web3.utils.toWei(\n    (order.amount * order.price).toString(),\n    \"ether\"\n  );\n\n  exchange.methods\n    .makeOrder(tokenGet, amountGet, tokenGive, amountGive)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(buyOrderMaking());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const makeSellOrder = (\n  dispatch,\n  exchange,\n  token,\n  web3,\n  order,\n  account\n) => {\n  const tokenGet = ETHER_ADDRESS;\n  const amountGet = web3.utils.toWei(\n    (order.amount * order.price).toString(),\n    \"ether\"\n  );\n  const tokenGive = token.options.address;\n  const amountGive = web3.utils.toWei(order.amount, \"ether\");\n\n  exchange.methods\n    .makeOrder(tokenGet, amountGet, tokenGive, amountGive)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(sellOrderMaking());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n","import React from 'react';\n\nexport default function ({ type }) {\n  if(type === 'table') {\n    return(<tbody className=\"spinner-border text-light text-center\"></tbody>)\n  } else {\n    return(<div className=\"spinner-border text-light text-center\"></div>)\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  orderFillingSelector\n} from '../store/selectors'\nimport { fillOrder } from '../store/interactions'\n\nconst renderOrder = (order, props) => {\n  const { dispatch, exchange, account } = props\n\n  return(\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n          {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr\n        key={order.id}\n        className=\"order-book-order\"\n        onClick={(e) => fillOrder(dispatch, exchange, order, account)}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n      </tr>\n    </OverlayTrigger>\n  )\n}\n\nconst showOrderBook = (props) => {\n  const { orderBook } = props\n\n  return(\n    <tbody>\n      {orderBook.sellOrders.map((order) => renderOrder(order, props))}\n      <tr>\n        <th>DAPP</th>\n        <th>DAPP/ETH</th>\n        <th>ETH</th>\n      </tr>\n      {orderBook.buyOrders.map((order) => renderOrder(order, props))}\n    </tbody>\n  )\n}\n\nclass OrderBook extends Component {\n  render() {\n    return (\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white\">\n          <div className=\"card-header\">\n            Order Book\n          </div>\n          <div className=\"card-body order-book\">\n            <table className=\"table table-dark table-sm small\">\n              { this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type='table' /> }\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const orderBookLoaded = orderBookLoadedSelector(state)\n  const orderFilling = orderFillingSelector(state)\n\n  return {\n    orderBook: orderBookSelector(state),\n    showOrderBook: orderBookLoaded && !orderFilling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(OrderBook);\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from './Spinner'\nimport {\n  filledOrdersLoadedSelector,\n  filledOrdersSelector\n} from '../store/selectors'\n\nconst showFilledOrders = (filledOrders) => {\n  return(\n    <tbody>\n      { filledOrders.map((order) => {\n        return(\n          <tr className={`order-${order.id}`} key={order.id}>\n            <td className=\"text-muted\">{order.formattedTimestamp}</td>\n            <td>{order.tokenAmount}</td>\n            <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  )\n}\n\nclass Trades extends Component {\n  render() {\n    return (\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white\">\n          <div className=\"card-header\">\n            Trades\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-dark table-sm small\">\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>DAPP</th>\n                  <th>DAPP/ETH</th>\n                </tr>\n              </thead>\n              { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" />}\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filledOrdersLoaded: filledOrdersLoadedSelector(state),\n    filledOrders: filledOrdersSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(Trades)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  myFilledOrdersLoadedSelector,\n  myFilledOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  myOpenOrdersSelector,\n  exchangeSelector,\n  accountSelector,\n  orderCancellingSelector\n} from '../store/selectors'\nimport { cancelOrder } from '../store/interactions'\n\nconst showMyFilledOrders = (props) => {\n  const { myFilledOrders } = props\n\n  return(\n    <tbody>\n      { myFilledOrders.map((order) => {\n        return (\n          <tr key={order.id}>\n            <td className=\"text-muted\">{order.formattedTimestamp}</td>\n            <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n            <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  )\n}\n\nconst showMyOpenOrders = (props) => {\n  const { myOpenOrders, dispatch, exchange, account } = props\n\n  return(\n    <tbody>\n      { myOpenOrders.map((order) => {\n        return (\n          <tr key={order.id}>\n            <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n            <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n            <td\n              className=\"text-muted cancel-order\"\n              onClick={(e) => {\n                cancelOrder(dispatch, exchange, order, account)\n              }}\n            >X</td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  )\n}\n\nclass MyTransactions extends Component {\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          My Transactions\n        </div>\n        <div className=\"card-body\">\n          <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n            <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>DAPP</th>\n                    <th>DAPP/ETH</th>\n                  </tr>\n                </thead>\n                { this.props.showMyFilledOrders ? showMyFilledOrders(this.props) : <Spinner type=\"table\" />}\n              </table>\n            </Tab>\n            <Tab eventKey=\"orders\" title=\"Orders\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Amount</th>\n                    <th>DAPP/ETH</th>\n                    <th>Cancel</th>\n                  </tr>\n                </thead>\n                { this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n              </table>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n\n  return {\n    myFilledOrders: myFilledOrdersSelector(state),\n    showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n    myOpenOrders: myOpenOrdersSelector(state),\n    showMyOpenOrders: myOpenOrdersLoaded && !orderCancelling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyTransactions);\n\n\n\n\n\n\n\n\n\n\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: false },\n    toolbar: { show: false },\n    width: '100px'\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\nexport const dummyData = [\n  {\n    data: [\n      {\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }\n]\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Chart from 'react-apexcharts'\nimport Spinner from './Spinner'\nimport { chartOptions } from './PriceChart.config'\nimport {\n  priceChartLoadedSelector,\n  priceChartSelector\n} from '../store/selectors'\n\nconst priceSymbol = (lastPriceChange) => {\n  let output\n  if(lastPriceChange === '+') {\n    output = <span className=\"text-success\">&#9650;</span> // Green up tiangle\n  } else {\n    output = <span className=\"text-danger\">&#9660;</span> // Red down triangle\n  }\n  return(output)\n}\n\nconst showPriceChart = (priceChart) => {\n  return(\n    <div className=\"price-chart\">\n      <div className=\"price\">\n        <h4>DAPP/ETH &nbsp; {priceSymbol(priceChart.lastPriceChange)} &nbsp; {priceChart.lastPrice}</h4>\n      </div>\n      <Chart options={chartOptions} series={priceChart.series} type='candlestick' width='100%' height='100%' />\n    </div>\n  )\n}\n\nclass PriceChart extends Component {\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Price Chart\n        </div>\n        <div className=\"card-body\">\n          {this.props.priceChartLoaded ? showPriceChart(this.props.priceChart) : <Spinner />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n\n  return {\n    priceChartLoaded: priceChartLoadedSelector(state),\n    priceChart: priceChartSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(PriceChart)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  loadBalances,\n  depositEther,\n  depositToken,\n  withdrawEther,\n  withdrawToken\n} from '../store/interactions'\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  etherBalanceSelector,\n  tokenBalanceSelector,\n  exchangeEtherBalanceSelector,\n  exchangeTokenBalanceSelector,\n  balancesLoadingSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector,\n} from '../store/selectors'\nimport {\n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged,\n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged,\n} from '../store/actions'\nconst showForm = (props) => {\n  const {\n    dispatch,\n    exchange,\n    web3,\n    account,\n    etherBalance,\n    tokenBalance,\n    exchangeEtherBalance,\n    exchangeTokenBalance,\n    etherDepositAmount,\n    token,\n    tokenDepositAmount,\n    etherWithdrawAmount,\n    tokenWithdrawAmount\n  } = props\n\n  return(\n    <Tabs defaultActiveKey=\"deposit\" className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"deposit\" title=\"Deposit\" className=\"bg-dark\">\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositEther(dispatch, exchange, web3, etherDepositAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch( etherDepositAmountChanged(e.target.value) ) }\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>DAPP</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositToken(dispatch, exchange, web3, token, tokenDepositAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DAPP Amount\"\n            onChange={(e) => dispatch( tokenDepositAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"withdraw\" title=\"Withdraw\" className=\"bg-dark\">\n\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawEther(dispatch, exchange, web3, etherWithdrawAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch( etherWithdrawAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>DAPP</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawToken(dispatch, exchange, web3, token, tokenWithdrawAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DAPP Amount\"\n            onChange={(e) => dispatch( tokenWithdrawAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n      </Tab>\n    </Tabs>\n  )\n}\n\nclass Balance extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const { dispatch, web3, exchange, token, account } = this.props\n    await loadBalances(dispatch, web3, exchange, token, account)\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Balance\n        </div>\n        <div className=\"card-body\">\n          {this.props.showForm ? showForm(this.props) : <Spinner />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state),\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(Balance)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  buyOrderSelector,\n  sellOrderSelector\n} from '../store/selectors'\nimport {\n  buyOrderAmountChanged,\n  buyOrderPriceChanged,\n  sellOrderAmountChanged,\n  sellOrderPriceChanged,\n} from '../store/actions'\nimport {\n  makeBuyOrder,\n  makeSellOrder\n} from '../store/interactions'\n\nconst showForm = (props) => {\n  const {\n    dispatch,\n    buyOrder,\n    exchange,\n    token,\n    web3,\n    account,\n    sellOrder,\n    showBuyTotal,\n    showSellTotal\n  } = props\n\n  return(\n    <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"buy\" title=\"Buy\" className=\"bg-dark\">\n\n          <form onSubmit={(event) => {\n            event.preventDefault()\n            makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account)\n          }}>\n          <div className=\"form-group small\">\n            <label>Buy Amount (DAPP)</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-dark text-white\"\n                placeholder=\"Buy Amount\"\n                onChange={(e) => dispatch( buyOrderAmountChanged( e.target.value ) )}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group small\">\n            <label>Buy Price</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-dark text-white\"\n                placeholder=\"Buy Price\"\n                onChange={(e) => dispatch( buyOrderPriceChanged( e.target.value ) )}\n                required\n              />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">Buy Order</button>\n          { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"sell\" title=\"Sell\" className=\"bg-dark\">\n\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          makeSellOrder(dispatch, exchange, token, web3, sellOrder, account)\n        }}>\n        <div className=\"form-group small\">\n          <label>Buy Sell (DAPP)</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm bg-dark text-white\"\n              placeholder=\"Sell amount\"\n              onChange={(e) => dispatch( sellOrderAmountChanged( e.target.value ) )}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group small\">\n          <label>Sell Price</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm bg-dark text-white\"\n              placeholder=\"Sell Price\"\n              onChange={(e) => dispatch( sellOrderPriceChanged( e.target.value ) )}\n              required\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">Sell Order</button>\n        { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n      </form>\n\n      </Tab>\n    </Tabs>\n  )\n}\n\nclass NewOrder extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          New Order\n        </div>\n        <div className=\"card-body\">\n          {this.props.showForm ? showForm(this.props) : <Spinner />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state)\n  const sellOrder = sellOrderSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    buyOrder,\n    sellOrder,\n    showForm: !buyOrder.making && !sellOrder.making,\n    showBuyTotal: buyOrder.amount && buyOrder.price,\n    showSellTotal: sellOrder.amount && sellOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(NewOrder)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { exchangeSelector } from '../store/selectors'\nimport { loadAllOrders, subscribeToEvents } from '../store/interactions'\nimport OrderBook from './OrderBook'\nimport Trades from './Trades'\nimport MyTransactions from './MyTransactions'\nimport PriceChart from './PriceChart'\nimport Balance from './Balance'\nimport NewOrder from './NewOrder'\n\nclass Content extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n    const { dispatch, exchange } = props\n    await loadAllOrders(exchange, dispatch)\n    await subscribeToEvents(exchange, dispatch)\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"vertical-split\">\n          <Balance />\n          <NewOrder />\n        </div>\n        <OrderBook />\n        <div className=\"vertical-split\">\n          <PriceChart />\n          <MyTransactions />\n        </div>\n        <Trades />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    exchange: exchangeSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Content)\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Content from \"./Content\";\nimport { connect } from \"react-redux\";\nimport {\n  loadWeb3,\n  loadAccount,\n  loadToken,\n  loadExchange,\n} from \"../store/interactions\";\nimport { contractsLoadedSelector } from \"../store/selectors\";\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props.dispatch);\n  }\n\n  async loadBlockchainData(dispatch) {\n    const web3 = await loadWeb3(dispatch);\n    const networkId = await web3.eth.net.getId();\n    await loadAccount(web3, dispatch);\n    const token = await loadToken(web3, networkId, dispatch);\n    if (!token) {\n      window.alert(\n        \"Token smart contract not detected on the current network. Please select another network with Metamask.\"\n      );\n      return;\n    }\n    const exchange = await loadExchange(web3, networkId, dispatch);\n    if (!exchange) {\n      window.alert(\n        \"Exchange smart contract not detected on the current network. Please select another network with Metamask.\"\n      );\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        {this.props.contractsLoaded ? (\n          <Content />\n        ) : (\n          <div className=\"content\"></div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state),\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,  connection: action.connection }\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'TOKEN_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    case 'ORDER_CANCELLING':\n      return { ...state, orderCancelling: true }\n    case 'ORDER_CANCELLED':\n      return {\n        ...state,\n        orderCancelling: false,\n        cancelledOrders: {\n          ...state.cancelledOrders,\n          data: [\n            ...state.cancelledOrders.data,\n            action.order\n          ]\n        }\n      }\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.filledOrders.data, action.order]\n      } else {\n        data = state.filledOrders.data\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      }\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true }\n\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return { ...state, etherBalance: action.balance }\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return { ...state, tokenBalance: action.balance }\n    case 'BALANCES_LOADING':\n      return { ...state, balancesLoading: true }\n    case 'BALANCES_LOADED':\n      return { ...state, balancesLoading: false }\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, etherDepositAmount: action.amount }\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, etherWithdrawAmount: action.amount }\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, tokenDepositAmount: action.amount }\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, tokenWithdrawAmount: action.amount }\n\n    case 'BUY_ORDER_AMOUNT_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n    case 'BUY_ORDER_PRICE_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n    case 'BUY_ORDER_MAKING':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true } }\n\n    case 'ORDER_MADE':\n      // Prevent duplicate orders\n      index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.allOrders.data, action.order]\n      } else {\n        data = state.allOrders.data\n      }\n\n      return {\n        ...state,\n        allOrders: {\n          ...state.allOrders,\n          data\n        },\n        buyOrder: {\n          ...state.buyOrder,\n          making: false\n        },\n        sellOrder: {\n          ...state.sellOrder,\n          making: false\n        }\n      }\n\n    case 'SELL_ORDER_AMOUNT_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n    case 'SELL_ORDER_PRICE_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n    case 'SELL_ORDER_MAKING':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true } }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// For Redux Dev Tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}